#!/bin/bash

# --- START CHECK IF HOME (if not already) ---
if ! pgrep -f "bash ~/scripts/max/check-if-home" >/dev/null 2>&1; then
    bash ~/scripts/max/check-if-home >/dev/null 2>&1 &
fi


# --- KILL LAST AND CREATE NEW SESSION ---
trap cleanup EXIT
cleanup() { pkill -P $$; }
tmux kill-server >/dev/null 2>&1
sleep 0.2
SESSION="kiosk"
tmux new-session -d -s "$SESSION" 'bash ~/scripts/ksk/c-playing'

# --- TMUX SETTINGS ---
tmux set-option -t "$SESSION" status off
tmux set-option -t "$SESSION" pane-border-style fg=default
tmux set-option -t "$SESSION" pane-active-border-style fg=default
tmux set-option -t "$SESSION" mouse on
tmux set-option -g display-panes-time 1
tmux bind-key -T root q kill-session

# --- PANES ---
# PANE0
pane0=$(tmux list-panes -t "$SESSION" -F "#{pane_id}" | head -n1)
# PANE1
tmux split-window -v -t "$pane0" "bash ~/scripts/max/max"
pane1=$(tmux display-message -p "#{pane_id}")
# PANE2
tmux split-window -h -t "$pane1" 'tty-clock -cs -C 5'
pane2=$(tmux display-message -p "#{pane_id}")
# PANE3
tmux split-window -h -t "$pane2" 'cava'
pane3=$(tmux display-message -p "#{pane_id}")
# PANE4
tmux split-window -v -t "$pane2" 'watch -tn 10 bash ~/scripts/ksk/gmail && read -rp '''
pane4=$(tmux display-message -p "#{pane_id}")
# PANE5
tmux split-window -v -t "$pane3" 'bash ~/scripts/ksk/s-player'
pane5=$(tmux display-message -p "#{pane_id}")
# PANE6
tmux split-window -v -t "$pane1" 'bash ~/scripts/ksk/timers'
pane6=$(tmux display-message -p "#{pane_id}")
# PANE7
tmux split-window -v -t "$pane0" 'bash ~/scripts/ksk/mycal'
pane7=$(tmux display-message -p "#{pane_id}")
# PANE8
tmux split-window -h -t "$pane7" 'cava'
pane8=$(tmux display-message -p "#{pane_id}")
# PANE9
tmux split-window -h -t "$pane7" "watch -ctn1 'echo -e \"\e[35m\$(figlet -f bigascii12.tlf kiosk)\e[0m\"'"
pane9=$(tmux display-message -p "#{pane_id}")
# PANE10
ssh_ip=$(echo $SSH_CLIENT | awk '{print $1}')
if [[ "$ssh_ip" == 217.146.66.5 ]]; then
   tmux split-window -v -t "$pane3" 'bash ~/scripts/ksk/bus -b 13 -f Väike-Õismäe -a zone'
else
   tmux split-window -v -t "$pane3" 'bash ~/scripts/ksk/bus -b 13 -f Priisle -a kodu'
fi
pane10=$(tmux display-message -p "#{pane_id}")
(
  while true; do
    sleep 2
    for i in {1..10}; do
      tmux send-keys -t "$pane10" a
      tmux send-keys -t "$pane10" a
      tmux send-keys -t "$pane10" a
      sleep 1
    done
    sleep 1
    tmux send-keys -t "$pane10" q
  done
) &
# PANE11
tmux split-window -v -t "$pane1" 'watch -ctn1 curl -s dev.tihkel.ee/t-chat.log'
pane11=$(tmux display-message -p "#{pane_id}")
# PANE12
watch_cmd_pane12='watch -ctn1 "w | grep -v tmux | awk '\''NR>1 {printf \"%-7s %-6s %-14s %-6s %-6s %-0s\n\",\$1,\$2,\$3,\$4,\$5,\$8}'\''"'
tmux split-window -v -t "$pane2" "$watch_cmd_pane12"
pane12=$(tmux display-message -p "#{pane_id}")

# --- TMUX RESIZE ---
tmux resize-pane -t "$pane0" -y 0
tmux resize-pane -t "$pane2" -x 6
tmux resize-pane -t "$pane1" -x 10
tmux resize-pane -t "$pane9" -y 5

# --- SHOW/HIDE WHEN SPOTIFY PLAYING ---
(
  hidden=false
  while true; do
    sleep 1
    status=$(playerctl -p spotify status 2>/dev/null)
    if [[ "$status" == "Playing" ]]; then
      if $hidden; then
        tmux resize-pane -t "$pane0" -y 7 2>/dev/null
        tmux resize-pane -t "$pane3" -x 55 2>/dev/null   # show cava (pane3)
        tmux resize-pane -t "$pane8" -x 55 2>/dev/null   # show cava (pane8)
        hidden=false
      fi
    else
      if ! $hidden; then
        tmux resize-pane -t "$pane0" -y 0 2>/dev/null
        tmux resize-pane -t "$pane3" -x 0 2>/dev/null
        tmux resize-pane -t "$pane8" -x 0 2>/dev/null
        hidden=true
      fi
    fi
  done
) &

# --- POST SETUP ---
# (DONT KNOW WHY)
tmux kill-pane -t "$pane3" 2>/dev/null
# FIX/RESPAWN C-PLAYING AND TTY-CLOCK
(sleep 1;
tmux respawn-pane -k -t "$SESSION"."$pane0"
tmux respawn-pane -k -t "$SESSION"."$pane2"
) &
# FOCUS ON PANE
tmux select-pane -t "$pane5"

# --- START SESSION ---
tmux attach-session -t "$SESSION"
